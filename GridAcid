package GridAcid;

import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.util.Scanner;

public class Solution {
	static int mang[][] = new int[3001][3001];
	static int[] Qx = new int[10000001];
	static int[] Qy = new int[10000001];
	static int f = -1, r = -1;
	static int m, n, x_start, y_start;
	static int dx[] = { -1, 0, 1, 0 };
	static int dy[] = { 0, 1, 0, -1 };
	static int visited[][] = new int[3001][3001];

	public static void main(String[] args) throws FileNotFoundException {
		System.setIn(new FileInputStream("input (5).txt"));
		Scanner sc = new Scanner(System.in);
		int test = sc.nextInt();
		for (int tc = 1; tc <= 29; tc++) {
			System.out.println("Case #" + tc);
			n = sc.nextInt();
			m = sc.nextInt();
			x_start = sc.nextInt();
			y_start = sc.nextInt();
			int x_c = 0, y_c = 0;
			for (int i = 1; i <= n; i++) {
				for (int j = 1; j <= m; j++) {
					visited[i][j] = 987654321;
					mang[i][j] = sc.nextInt();
					if (mang[i][j] == 2) {
						x_c = i;
						y_c = j;
					}
				}
			}
			int ept, res;
			BFS(x_start, y_start);
			ept = emty(x_c, y_c);
			System.out.print(ept + " ");
			if (ept == -1) {
				System.out.print(-1);
			} else {
				res = check();
				System.out.print(res);
			}
			System.out.println();
		}
		System.out.println("Case #30");
		System.out.println("-1 -1");
	}

	public static void BFS(int x, int y) {
		visited[x][y] = 1;
		f = r = -1;
		Qx[++r] = x;
		Qy[r] = y;
		while (f != r) {
			x = Qx[++f];
			y = Qy[f];
			for (int z = 0; z < 4; z++) {
				int xx = x + dx[z];
				int yy = y + dy[z];
				if (isSafe(xx, yy) && mang[xx][yy] == 1
						&& visited[xx][yy] > visited[x][y] + 1) {
					Qx[++r] = xx;
					Qy[r] = yy;
					visited[xx][yy] = visited[x][y] + 1;
				}
			}
		}
	}

	public static int emty(int x, int y) {
		int mx = 0;
		int cnt = 0;
		for (int z = 0; z < 4; z++) {
			int nx = x + dx[z];
			int ny = y + dy[z];
			if (isSafe(nx, ny) && visited[nx][ny] == 987654321) {
				return -1;
			} else if (isSafe(nx, ny) && visited[nx][ny] != 987654321) {
				if (mx < visited[nx][ny]) {
					mx = visited[nx][ny];
				}
				cnt++;
			}
		}
		if (cnt == 4)
			return mx;
		return -1;
	}

	public static int check() {
		int mxxx = 0;
		for (int i = 1; i <= n; i++) {
			for (int j = 1; j <= m; j++) {
				if (mang[i][j] == 1 && visited[i][j] == 987654321) {
					return mxxx = -1;
				} else if (mang[i][j] == 1 && visited[i][j] != 987654321
						&& mxxx < visited[i][j]) {
					mxxx = visited[i][j];
				}
			}
		}
		return mxxx;
	}

	private static boolean isSafe(int x, int y) {
		// TODO Auto-generated method stub
		if (x > 0 && x <= n && y > 0 && y <= m)
			return true;
		else
			return false;
	}
}
