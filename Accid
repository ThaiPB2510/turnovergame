#include <iostream>
#define MAX 3000

using namespace std;

int M,N;
int a[MAX][MAX];
int d[MAX][MAX];
int qx[(MAX*MAX)/2];
int qy[(MAX*MAX)/2];
int r,f;
int Max;
int xo,yo;
int x2,y2;

void hien(int s[][MAX])
{
	for (int i = 0; i < M; i++)
	{
		for (int j = 0; j < N; j++)
		{
			cout<<s[i][j]<<"\t";
		}
		cout<<endl;
	}
	cout<<endl;
}

bool ValidPos(int x, int y)
{
	if (x<0 || y<0 || x>=M || y>= N)
	{
		return false;
	}
	return true;
}
void Init()
{
	r = f = -1;
	Max = 0;
}
void Input()
{
	cin>>M>>N;
	cin>>xo>>yo;
	xo--;yo--;
	Init();
	for (int i = 0; i < M; i++)
	{
		for (int j = 0; j < N; j++)
		{
			d[i][j] = MAX*MAX*99;
			cin>>a[i][j];
			if (a[i][j] == 2)
			{
				x2 = i; y2 = j;
			}
		}
	}
}



void Push(int x, int y)
{
	r++;
	qx[r] = x; qy[r] = y;
}

void Pop(int &x, int &y)
{
	f++;
	x = qx[f]; y = qy[f];
}

int dx[] = {0,0,-1,1};
int dy[] = {-1,1,0,0};

void BFS()
{
	d[xo][yo] = 0;
	Push(xo,yo);
	while (f<r)
	{
		int x, y;
		Pop(x,y);
		for (int i = 0; i < 4; i++)
		{
			int xx = x + dx[i];
			int yy = y + dy[i];
			//cout<<(d[x][y]+1 < d[xx][yy])<<endl;
			if (ValidPos(xx,yy) && d[x][y]+1 < d[xx][yy] && a[xx][yy] == 1)
			{
				d[xx][yy] = 1 + d[x][y];
				if (d[xx][yy] > Max)
				{
					Max = d[xx][yy];
				}
				Push(xx,yy);
			}
		}
	}

}

void Check()
{
	int Check1 = 0;
	int mStone = -1;
	for (int i = 0; i < 4; i++)
	{
		if (d[x2 + dx[i]][y2 + dy[i]]==MAX*MAX*99)
		{
			Check1 = 1;
			mStone = -1;
			break;
		}
		else if (d[x2 + dx[i]][y2 + dy[i]] > mStone)
		{
			mStone = d[x2 + dx[i]][y2 + dy[i]];
		}
	}
	if (Check1)
	{
		cout<<-1<<" "<<-1<<endl;
	}
	else
	{
		Check1 = 0;
		cout<<mStone+1<<" ";
		for (int i = 0; i <M; i++)
		{
			for (int j = 0; j < N; j++)
			{
				if (d[i][j] == MAX*MAX*99 && a[i][j]!=2 && a[i][j] != 0)
				{
					Check1 = 1;
					cout<<-1<<endl;
					break;
				}
			}
			if(Check1)break;
		}
		if (!Check1)
		{
			cout<<Max+1<<endl;
		}

	}
	
}


int main()
{
//	freopen("Text.txt","r",stdin);
	int T; cin>>T;
	for (int t = 1; t <= T; t++)
	{
		Input();
		BFS();
		//hien(d);
		cout<<"Case #"<<t<<endl;
		Check();
		
		
	}

	return 0;
}
