package Visit;

import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.util.Scanner;

public class Solution {
	static int n, e, k, t, u, v, r1, r2;
	static float z, p1, p2;
	static int room[][];
	static float chance[][], xs[][];

	public static void main(String[] args) throws FileNotFoundException {
		// TODO Auto-generated method stub
		System.setIn(new FileInputStream("input.txt"));
		Scanner sc = new Scanner(System.in);
		for (int tc = 1; tc <= 10; tc++) {
			n = sc.nextInt();
			e = sc.nextInt();
			k = sc.nextInt();
			t = sc.nextInt();
			room = new int[n + 2][n + 2];
			chance = new float[n + 2][n + 2];
			xs = new float[n + 2][t / 10 + 2];
			for (int i = 1; i <= e; i++) {
				u = sc.nextInt();
				v = sc.nextInt();
				z = sc.nextFloat();
				room[u][room[u][n]] = v;
				chance[u][v] = z;
				room[u][n] = room[u][n] + 1;
			}
			r1 = r2 = 0;
			p1 = p2 = 0;
			Solve();
			System.out.println("#" + tc + " " + r1 + " "
					+ String.format("%.6f", p1) + " " + r2 + " "
					+ String.format("%.6f", p2));
		}
	}

	private static void Solve() {
		// TODO Auto-generated method stub
		xs[1][1] = 1;
		for (int i = 1; i <= t / 10; i++) {
			for (int j = 1; j <= n; j++) {
				if (xs[j][i] > 0) {
					for (int k = 1; k <= n; k++) {
						if (chance[j][k] > 0) {
							xs[k][i + 1] += xs[j][i] * chance[j][k];
						}
					}
				}
			}
		}
		for (int i = 1; i <= n; i++) {
			if (xs[i][t / 10 + 1] > p1) {
				r1 = i;
				p1 = xs[i][t / 10 + 1];
			}
		}
		int temp = t - k;
		for (int i = 1; i <= n; i++) {
			if (xs[i][(temp / 10) + 1] > p2) {
				r2 = i;
				p2 = xs[i][(t - k) / 10 + 1];
			}
		}
	}

}
