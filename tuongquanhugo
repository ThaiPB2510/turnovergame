import java.util.Scanner;



public class Solution {

	public static boolean [][] visit;
	
	 static Point [] arr;
	 static int [] a;

	 static int  n, answer, m, l, r, dem, sums ;

	 static int kq;
	 static boolean check;

	 static Point []  Q;
	public static void main(String[] args)  {
		
		Scanner in = new Scanner(System.in);
		
		int T =in.nextInt();
		
		
		for(int tc=1;tc<=T;tc++){
			
			n = in.nextInt();
			
			arr = new Point[n+1];
			
			for (int i = 0; i < n; i++) {
				arr [i]= new Point(in.nextInt(), in.nextInt());
			}
			a = new int[4];
			answer =1000000;
			
			for (int j = 0; j < 3; j++) {
				a[j]=0;
			}
			Try(0, 0, 0, 0, 0);
		System.out.print("#"+ tc+" ");
		System.out.println(answer);
		
		
		}
	}
	
	
	public static void Try(int i, int kq, int a1, int a2, int a3) {
		if (kq< answer) {
			if (i == n) {
				if (answer > kq) {
					answer = kq;
				}
				
			}else {
				Try(i+1, kq + arr[i].y, a1, a2, a3);
				
				Try(i+1, kq + arr[i].y*2 , a1, a2, a3+arr[i].x);
				
				if (a1 + a2 + a3  >= arr[i].x) {
					int linh = arr[i].x;
					linh = linh - a1;
					if (linh<=0) {
						Try(i+1, kq, a2, a3, 0);
					}else {
						linh = linh - a2;
						if (linh <=0) {
							Try(i+1, kq, Math.abs(linh) , a3, 0 );
						}
						else {
							linh = linh - a3;
							Try(i+1, kq, 0 , Math.abs(linh), 0 );
						}
					}
				}
			}
		}
		
	}
}

class Point{
	int x, y;
	public Point(int x, int y) {
		super();
		this.x = x;
		this.y = y;
	}
	
}




